<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>com.fcang.spider</groupId>
		<artifactId>hotel-spider</artifactId>
        <version>0.1.1-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
	<packaging>jar</packaging>

    <artifactId>hotel-spider-provider</artifactId>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <java.version>1.8</java.version>
        <org.apache.zookeeper.version>3.4.6</org.apache.zookeeper.version>
    </properties>
    <dependencies>
        
        <dependency>
            <groupId>com.fcang.spider</groupId>
            <artifactId>hotel-spider-domain</artifactId>
            <version>${project.parent.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
       
		<dependency>
            <groupId>com.fcang.spider</groupId>
            <artifactId>hotel-spider-core</artifactId>
            <version>0.1.1-SNAPSHOT</version>
            <scope>compile</scope>
        </dependency>
        
		
       

        <!-- log -->
       <!-- LOGGING begin -->
		<!-- slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>

		<!-- logback -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-core</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- 代码直接调用log4j会被桥接到slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>

		<!-- 代码直接调用commons-logging会被桥接到slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>

		<!-- 代码直接调用java.util.logging会被桥接到slf4j -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jul-to-slf4j</artifactId>
		</dependency>

		<!-- LOGGING end -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.assertj</groupId>
            <artifactId>assertj-core</artifactId>
        </dependency>

        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>fastjson</artifactId>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
        </dependency>
<!-- https://mvnrepository.com/artifact/redis.clients/jedis -->
<dependency>
    <groupId>redis.clients</groupId>
    <artifactId>jedis</artifactId>
    <version>3.0.0</version>
</dependency>

        <dependency>
            <groupId>commons-collections</groupId>
            <artifactId>commons-collections</artifactId>
        </dependency>
        
        <!-- https://mvnrepository.com/artifact/com.googlecode.aviator/aviator -->
		<dependency>
		    <groupId>com.googlecode.aviator</groupId>
		    <artifactId>aviator</artifactId>
		    <version>3.1.0</version>
		</dependency>
       	<dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-aop</artifactId>
        </dependency>
         <dependency>
               <groupId>com.google.guava</groupId>
               <artifactId>guava</artifactId>
           </dependency>
		<dependency>
		    <groupId>org.javassist</groupId>
		    <artifactId>javassist</artifactId>
		</dependency>
			<!-- https://mvnrepository.com/artifact/com.belerweb/pinyin4j -->
		<dependency>
		    <groupId>com.belerweb</groupId>
		    <artifactId>pinyin4j</artifactId>
		    <version>2.5.1</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.google.code.gson/gson -->
		<dependency>
		    <groupId>com.google.code.gson</groupId>
		    <artifactId>gson</artifactId>
		</dependency>
		 <dependency>
            <groupId>com.aliyun.openservices</groupId>
            <artifactId>ons-client</artifactId>
            <version>1.6.0.Final</version>
        </dependency>
        <!-- spring boot -->
        <dependency>
      		<groupId>org.springframework.boot</groupId>
      		<artifactId>spring-boot-starter</artifactId>
      		<exclusions>
	            <exclusion>
	                <groupId>org.springframework.boot</groupId>
	                <artifactId>spring-boot-starter-logging</artifactId>
	            </exclusion>
        	</exclusions>
    	</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
        
         <dependency>
            <groupId>org.mybatis.spring.boot</groupId>
            <artifactId>mybatis-spring-boot-starter</artifactId>
        </dependency>
        
      	 <!--druid数据库连接池-->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>druid</artifactId>
        </dependency>
       <!-- mock test -->
        <!-- 
		 <dependency>  
                <groupId>org.powermock</groupId>  
                <artifactId>powermock-api-mockito</artifactId>  
                <version>1.6.6</version>  
                 <scope>test</scope>  
            </dependency>  
  
            <dependency>  
                <groupId>org.mockito</groupId>  
                <artifactId>mockito-all</artifactId>  
                <version>1.10.19</version>  
                 <scope>test</scope>  
            </dependency>  
            <dependency>  
                <groupId>org.powermock</groupId>  
                <artifactId>powermock-module-junit4</artifactId>  
                <version>1.6.6</version>  
                <scope>test</scope>  
            </dependency>  
            <dependency>  
                <groupId>org.powermock</groupId>  
                <artifactId>powermock-module-junit4-rule-agent</artifactId>  
                <version>1.6.6</version>  
                <scope>test</scope>  
            </dependency>  
            <dependency>  
                <groupId>org.powermock</groupId>  
                <artifactId>powermock-module-junit4-rule</artifactId>  
                <version>1.6.6</version>  
                <scope>test</scope>  
            </dependency>  
            <dependency>  
                <groupId>org.jacoco</groupId>  
                <artifactId>org.jacoco.agent</artifactId>  
                <classifier>runtime</classifier>  
                <version>0.7.9</version>  
                <scope>test</scope>  
            </dependency>    -->
   
    </dependencies>
	<build>
		<plugins>
			 <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                    <executions>
                        <execution>
                            <goals>
                                <goal>repackage</goal>
                            </goals>
                        </execution>
                    </executions>
            </plugin>
             <!-- war打包插件, 设定war包名称不带版本号 -->   
	        <plugin>   
	            <groupId>org.apache.maven.plugins</groupId>   
	            <artifactId>maven-war-plugin</artifactId>   
	            <version>2.5</version>   
	            <configuration>   
	                <warName>${project.artifactId}</warName>   
	            </configuration>    
	        </plugin>  
		    <plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-deploy-plugin</artifactId>
		        <version>2.8.2</version>
		        <configuration>
		            <skip>true</skip> 
		        </configuration>
		    </plugin>
	          
		</plugins>

        <filters>
            <filter>src/main/resources/config/${profiles.active}/application.properties</filter>
        </filters>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>*.xml</include>
                    <include>**/*.xml</include>
                    <include>**/*.Filter</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/resources/config/${profiles.active}</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>


    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <profiles.active>dev</profiles.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <build>
                <filters>
                    <filter>src/main/resources/config/dev/application.properties</filter>
                </filters>
            </build>
        </profile>
        
        <profile>
            <id>prod</id>
            <properties>
                <profiles.active>prod</profiles.active>
            </properties>
            <build>
                <filters>
                    <filter>src/main/resources/config/prod/application.properties</filter>
                </filters>
            </build>
        </profile>
    </profiles>



</project>